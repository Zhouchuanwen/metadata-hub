"""
Collection of all available Queries
"""
type Query{
    """
    searchForFileMetadata:
    Searches for all file metadata dependent on the specified search options.
    If no options are specified, all file metadata is returned.

    Search Options:
    file_id: Only returns file metadata belonging to one of the file ids in the list.
    crawl_id: Only returns file metadata belonging to one of the crawl ids in the list.
    dir_path: Only returns file metadata where their directory path matches the specified pattern.
        Default PatternOption is "included".
    dir_path_option: Different PatternOptions can be used, which change how "dir_path" gets compared to other Strings.
    file_name: Only returns file metadata where their file_name matches the specified pattern.
        Default PatternOption is "included"
    file_name_option: Different PatternOptions can be used, which change how "file_name" gets compared to other Strings.
    file_types: Only returns file metadata where the file type is exactly one of the types specified in the list
    size: Only returns file metadata of a certain size depending on the used IntOption. Default IntOption is "equal".
    size_option: Here the IntOption for "size" can be specified.
    !Notice to timestamps!: timestamps follow the ISO 8601 standard, e.g. "2004-10-19 10:23:54+02", if no timezone is specified
        it is assumed to be in the system's timezone, if no time is specified "00:00:00" is used.
    start_creation_time: Only returns file metadata, which got created later or at the same point as "start_creation_time".
    end_creation_time: Only returns file metadata, which got created earlier than "end_creation_time".
    start_access_time: Only returns file metadata, which got accessed later or at the same point as "start_access_time".
    end_access_time: Only returns file metadata, which got accessed earlier than "end_access_time".
    start_modification_time: Only returns file metadata, which got modified later or at the same point as "start_modification_time".
    end_modification_time: Only returns file metadata, which got modified earlier than "end_modification_time".
    file_hash: Only returns file metadata where the file has the same sha_254 hash as the hashes in the list.
    metadata_attributes: (see in metadata_values)
    metadata_values: Only returns file metadata, where the file has the attribute specified in
        metadata_attributes and its value matches the value of metadata_values. Different PatternOptions can be used.
        Both lists have to be the same length as their ordering relates them to each other.
        Default PatternOption is "included".
    metadata_options: Different PatternOptions can be used for metadata_values. The index in metadata_option relates to the index
        in meta_data_values e.g. metadata_option[1] will be used for metadata_value[1]. If used both lists need to have the same length.
    metadata_filter_logic_options: Different FilterLogicOptions can be specified, which change how the metadata filters get logically used. [e.g. "AND" or "OR"]
        Default option is "AND".
    metadata_filter_logic: A String that can specify how the used metadata filters should logically be used.
        All filters are applied [AND], one of the filters is applied [OR]. e.g. "( f5 AND f2 ) OR f1"
        numbers correspond to the metadata list indexes (metadata_attributes, metadata_values) starting with 0
        Unused filter options that are in the list but not in the statement just use "AND"
    selected_attributes: For all file metadata only the specified metadata attributes are returned.
    sortBy: declare attributes of files table which the result gets sorted by.
        When rows are equal on the first search option the second attribute gets used for sorting and so on.
        If no sortBy_options are declared the result gets sorted in ascending order.
    sortBy_options: Declare sort options for the different attributes declared in sortBy.
        If sortBy_options are used the list has to be the same length as sortBy else all options get ignored.
    limitFetchingSize: Limits how many files will get fetched by the search.
        (Notice: if limitFetchinSize is declared the result gets ordered by the file name if not otherwise specified in sortBy)
    offset: declares how many rows of the query result are ignored
        (Notice: if offset is declared the result gets ordered by the file name if not otherwise specified in sortBy)
    showDeleted: if true, the query also returns metadata info about deleted files
    """
    searchForFileMetadata(file_ids: [Int!], crawl_ids: [Int!], dir_path: String, dir_path_option: MetadataOption,
        file_name: String, file_name_option: MetadataOption, file_types: [String!], size: Int, size_option: IntOption,
        start_creation_time: String, end_creation_time: String, start_access_time: String, end_access_time: String,
        start_modification_time: String, end_modification_time: String, file_hashes: [String!],
        metadata_attributes: [String!], metadata_values:[String!], metadata_options: [MetadataOption!],
        metadata_filter_logic_options: FilterLogicOption, metadata_filter_logic: String,
        selected_attributes: [String!],
        sortBy: [String!], sortBy_options: [SortByOption!], limitFetchingSize: Int, offset: Int,
        showDeleted: Boolean) : ResultSet
}

"""
Different options for checking Strings for patterns:
included: the String has the pattern included
excluded: the String does not! have the pattern included
equal: the String has to exactly match the pattern
bigger: the String has to be lexicographically bigger than the pattern
smaller: the String has to be lexicogarphicaly smaller than the pattern
exists: the String is not NULL
"""
enum MetadataOption{
    included
    excluded
    equal
    bigger
    smaller
    exists
}

"""
Different options for checking int values:
equal: int value has to be equal to specified value
bigger: int value has to be bigger than specified value
smaller: int value has to be smaller than specified value
"""
enum IntOption{
    equal
    bigger
    smaller
}

"""
Different options for using the metadata filters:
and: every filter option is "AND"-ed together, besides the filters that are possibly used in the metadata_filter_logic String
or: every filter option is "OR"-ed together, besides the filters that are possibly used in the metadata_filter_logic String
only_logic_string: only the filter options specified in the logic String are considered
"""
enum FilterLogicOption{
    and
    or
    only_logic_string
}

enum SortByOption{
    ASC
    DESC
}

"""
Type that gets returned by the searchForFileMetadata query
numberOfTotalFiles: the amount of total files the query would return
numberOfReturnedFiles: the amount of files that are acutally returned, can differ from numberOfTotalFiles when limitFetchingSize or offset is used in the query
"""
type ResultSet{
    fromIndex: Int
    toIndex: Int
    numberOfTotalFiles: Int
    numberOfReturnedFiles: Int
    files: [File]
}

type File{
    id: String!
    crawl_id: String!
    dir_path: String!
    name: String!
    type: String
    size: String
    metadata: [Metadatum!]!
    creation_time: String
    access_time: String
    modification_time: String
    file_hash: String
    deleted: Boolean
}

type Metadatum{
    name: String!
    value: String!
}

type Crawl{
    id: String!
    dir_path: String!
    name: String!
    status: String!
    crawl_config: String
    analyzed_dirs: String
    starting_time: String!
    finished_time: String
    update_time: String!
    analyzed_dirs_hash: String
}
